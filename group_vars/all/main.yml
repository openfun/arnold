---
env_type: development  # default to be overriden on command line
customer: patient0  # default to be overriden on command line
project_name: "{{ env_type }}-{{ customer }}"

# Openshift applications list for the project
# Example :
# apps:
#   - name: hello
#     services:
#       - name:     hello
#         host:     "{{ project_name }}.{{ domain_name }}"
#         port:     "8080"
#         env:
#           - name:   "RESPONSE"
#             value:  "Hello OpenShift! by Arnold"
#   - name: richie
#     services:
#       - name:     richie
#       - name:     richie-nginx
#         host:     "{{ env_type }}.richie.{{ domain_name }}"
#       - name:     postgresql
#         endpoint: true  # default False

# List environments that are trashable, i.e. not defining services using
# endpoints but deployment configurations for their databases.
trashable_env_types:
  - "ci"
  - "development"
  - "feature"

# Endpoints IP
endpoint_mongodb_ip:     192.168.10.11
endpoint_mysql_ip:       192.168.10.254
endpoint_postgresql_ip:  192.168.10.21

# Blue/Green deployment route prefixes
blue_green_route_prefixes:
  - "previous"
  - "current"
  - "next"

# Following a blue-green deployment strategy, for each deployment, we create a
# unique identifier (deployment_stamp) that will be used to create unique
# OpenShift object names & tags and connect them. This identifier starts with a
# "d" and contains the deployment datetime (with seconds precision), e.g.
# d-180611-08h46m30s. Default value is null as it should never be used as is,
# but initiated in a playbook using a "set_fact" task.
deployment_stamp: null

# Similarly to deployment stamps, we make job identifiers unique for each
# running playbook (deploy, create_object) by adding the job datetime (with
# seconds precision) to the job name, e.g.
# richie-collecstatic-j-180611-08h46m30s. Default value is null as it should
# never be used as is, but initiated in a playbook using a "set_fact" task.
job_stamp: null

# OpenShift's internal docker registry server
internal_docker_registry: "docker-registry.default.svc:5000"

# ACME (Automated Certificate Management Environment) We use the letsencrypt
# staging environment except in production (see:
# https://letsencrypt.org/docs/staging-environment)
acme_env: staging
# If the openshift-acme role has been created globally (ClusterRole), we don't
# need to create it for each project. Hence set "has_acme_cluster_role" to
# "true"
has_acme_cluster_role: false

# TODO: move the following settings to the redirect app
# Ports
aliases_port: 8999
nginx_ports:
  - "{{ aliases_port }}"
