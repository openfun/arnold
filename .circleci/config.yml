# CircleCI's configuration for Arnold
#
# Reference: https://circleci.com/docs/2.0/configuration-reference/

aliases:
  - &defaults
    docker:
      - image: circleci/python:3.6.5-stretch-node-browsers
    working_directory: ~/fun

  # Activate Docker in Docker (aka dind)
  - &dind
    setup_remote_docker:
      docker_layer_caching: true

  - &ci_env
    run:
      name: Define Environment Variable at Runtime
      command: |
        echo 'export ARNOLD_IMAGE="arnold:$(tr -d '\n' < VERSION)"' >> $BASH_ENV
        source $BASH_ENV

  - &docker_load
    run:
      name: Load docker image
      command: |
        docker load < /tmp/docker/images/arnold.tar
        docker images

  - &attach_workspace
    attach_workspace:
      # Must be absolute path or relative path from working_directory
      at: /tmp/docker

ci_env:

version: 2
jobs:

  # Build Arnold's docker image
  build:
    # We use the machine executor, i.e. a VM, not a container
    machine:
      # Cache docker layers so that we strongly speed up this job execution
      docker_layer_caching: true

    working_directory: ~/fun

    steps:
      - checkout
      - *ci_env
      - run:
          name: Build arnold production image
          command: |
            bin/build
            mkdir -p /tmp/docker/images
            docker save -o /tmp/docker/images/arnold.tar "${ARNOLD_IMAGE}"
      # Save the built to the workspace so that it can be reused in other jobs
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory.
          root: /tmp/docker
          # Must be relative path from root
          paths:
            - images

  lint-ansible:
    <<: *defaults

    steps:
      - checkout
      - *dind
      - *ci_env
      - *attach_workspace
      - *docker_load
      - run: bin/lint ansible

  lint-bash:
    <<: *defaults

    steps:
      - checkout
      - *dind
      - *ci_env
      - *attach_workspace
      - *docker_load
      - run: bin/lint bash

  lint-docker:
    <<: *defaults

    steps:
      - checkout
      - *dind
      - run: bin/lint docker

  test-built:
    <<: *defaults

    steps:
      - checkout
      - *dind
      - *attach_workspace
      - *docker_load
      - *ci_env
      - run:
          name: Test oc client installation
          command: |
            docker run --rm \
              -e OC_LOGIN=false \
              "${ARNOLD_IMAGE}" \
              oc version
      - run:
          name: Test ansible installation
          command: |
            docker run --rm \
              -e OC_LOGIN=false \
              "${ARNOLD_IMAGE}" \
              ansible --version

  # FIXME: we have deactivated plugins test coverage as the container user is
  # not allowed to write to /app/.coverage and CircleCI does not allow to mount
  # volumes with "docker run" commands.
  test-plugins:
    <<: *defaults

    steps:
      - checkout
      - *dind
      - *attach_workspace
      - *docker_load
      - *ci_env
      - run:
          name: Run unit tests for local plugins
          command: |
            docker run --rm \
              -e OC_LOGIN=false \
              --tmpfs /app/.pytest_cache \
              "${ARNOLD_IMAGE}" \
              python -m pytest --no-cov

workflows:
  version: 2

  arnold:
    jobs:
      - build
      - lint-ansible:
          requires:
            - build
      - lint-bash:
          requires:
            - build
      - lint-docker:
          requires:
            - build
      - test-built:
          requires:
          - lint-bash
          - lint-docker
          - lint-ansible
      - test-plugins:
          requires:
          - lint-bash
          - lint-docker
          - lint-ansible
