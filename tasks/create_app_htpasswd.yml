- name: Print "create_app_htpasswd" tasks header
  debug:
    msg: "Will create htpasswd for app {{ app.name }}"
  tags:
    - secret
    - htpasswd

- include_tasks: tasks/set_htpasswd_path_for_app.yml

- name: Set basic auth user password files
  set_fact:
    user: "{{ item }}"
    path: "{{ app_htpasswd_file_path | dirname + '/' + item }}"
  with_items: "{{ http_basic_auth_users }}"
  register: http_basic_auth_user_passwords
  tags:
    - secret
    - htpasswd

- name: Display http_basic_auth_user_passwords
  debug:
    msg: "{{ http_basic_auth_user_passwords | json_query('results[*].ansible_facts') | list | to_nice_yaml }}"
    verbosity: 3
  tags:
    - secret
    - htpasswd

- name: "Check application htpasswd file status"
  stat:
    path: "{{ app_htpasswd_file_path }}"
  register: app_htpasswd_file

# Create a htpasswd encrypted file with random passwords for users. Password
# files are generated plain text by default. They will be encrypted in the next
# step. If the htpasswd file (or user password files) already exists it won't be
# updated but left as is.
- name: Create htpasswd file
  htpasswd:
    path: "{{ app_htpasswd_file_path }}"
    name: "{{ item.user }}"
    password: "{{ lookup('password', item.path) }}"
  with_items: "{{ http_basic_auth_user_passwords | json_query('results[*].ansible_facts') }}"
  when: not app_htpasswd_file.stat.exists
  tags:
    - secret
    - htpasswd

# Look for the $ANSIBLE_VAULT header in ansible vaults. If it cannot be found,
# then the password file needs to be encrypted. We ignore errors as the `grep`
# command exit code may not be zero if the pattern has been found (already
# encrypted file case).
- name: Check htpasswd users password file encryption
  shell: "head -n 1 {{ item }} | grep -q -v '$ANSIBLE_VAULT'"
  ignore_errors: True
  no_log: True
  with_items: "{{ http_basic_auth_user_passwords | json_query('results[*].ansible_facts.path') | list }}"
  register: http_basic_auth_user_passwords_encryption_check

# Only encrypt plain text password files, e.g. files with no $ANSIBLE_VAULT
# header (the exit code of the previous grep command should be 0).
- name: Encrypt basic auth users password file
  command: ansible-vault encrypt {{ item }}
  with_items: "{{ http_basic_auth_user_passwords_encryption_check | json_query('results[?rc == `0`].item') | list }}"
  tags:
    - secret
    - htpasswd
