# Check that a vault exists for an application, we expect it to be named
# "{{application name }}.vault.yml" be stored in the "secrets" directory from
# group_vars for an environent and a customer.
- name: Get expected vault file for application
  stat:
    path: "group_vars/customer/{{ customer }}/{{ env_type }}/secrets/{{ app.name }}.vault.yml"
  register: app_vault

# If the vault exists for this app, store its checksum (sha1).
- name: Set application vault file checksum
  set_fact:
    app_vault_checksum: "{{ (app_vault.stat.exists and app_vault.stat.isreg) | ternary(app_vault.stat.checksum, '') }}"

# Set dynamic vars for this application's vault, i.e. richie_vault and
# richie_vault_checksum for the "richie" application name. This is useful if you
# want to refer to the application vault's checksum in your application defaults.
- name: Set application vault variables
  set_fact:
    "{{ app.name }}_vault": "{{ app_vault }}"
    "{{ app.name }}_vault_checksum": "{{ app_vault_checksum }}"
  when: app_vault.stat.exists and app_vault.stat.isreg
