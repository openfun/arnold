{%- set dc_name = "learninglocker-%s" | format(service_variant) -%}

{%- from "apps/learninglocker/templates/services/app/macros/mongodb_uri.yml.j2" import mongodb_uri with context -%}

apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: learninglocker
    service: "{{ service_variant }}"
    deployment_stamp: "{{ deployment_stamp }}"
    version: "{{ learninglocker_image_tag }}"
  name: "{{ dc_name }}-{{ deployment_stamp }}"
  namespace: "{{ project_name }}"
spec:
  replicas: {{ learninglocker_replicas }}
  template:
    metadata:
      labels:
        app: learninglocker
        service: "{{ service_variant }}"
        deployment_stamp: "{{ deployment_stamp }}"
        version: "{{ learninglocker_image_tag }}"
        deploymentconfig: "{{ dc_name }}-{{ deployment_stamp }}"
    spec:
      containers:
        - name: "{{ service_variant }}"
          image: "{{ learninglocker_image_name }}:{{ learninglocker_image_tag }}"
          imagePullPolicy: Always
{% if learninglocker_port %}
          ports:
            - containerPort: "{{ learninglocker_port }}"
              protocol: TCP
{% endif %}
          command: ["node", "{{ learninglocker_command }}"]
          envFrom:
            - secretRef:
                name: "{{ learninglocker_secret_name }}"
            - configMapRef:
                name: "learninglocker-app-dotenv-{{ deployment_stamp }}"
          env:
            - name: MONGODB_PATH
              value: "{{ mongodb_uri(env_type, trashable_env_types, learninglocker_mongodb_host, deployment_stamp, learninglocker_endpoint_mongodb_ips, learninglocker_mongodb_replicaset, learninglocker_mongodb_read_preference) }}"
          volumeMounts:
            - name: learninglocker-v-storage
              mountPath: /app/storage
      volumes:
        - name: learninglocker-v-storage
          persistentVolumeClaim:
            claimName: learninglocker-pvc-storage
