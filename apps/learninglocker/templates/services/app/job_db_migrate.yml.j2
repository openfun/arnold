{%- from "apps/learninglocker/templates/services/app/macros/mongodb_uri.yml.j2" import mongodb_uri with context -%}

apiVersion: batch/v1
kind: Job
metadata:
  name: "learninglocker-job-db-migrate-{{ job_stamp }}"
  namespace: "{{ project_name }}"
  labels:
    app: learninglocker
    deployment_stamp: "{{ deployment_stamp }}"
    job_stamp: "{{ job_stamp }}"
    # Jobs with the "pre" job type will be executed prior to deployments
    job_type: "pre"
    service: learninglocker
    version: "{{ learninglocker_image_tag }}"
spec:
  template:
    metadata:
      name: "learninglocker-job-db-migrate-{{ job_stamp }}"
      labels:
        app: learninglocker
        service: learninglocker
        version: "{{ learninglocker_image_tag }}"
        job_stamp: "{{ job_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      containers:
      - name: learninglocker-job-db-migrate
        image: "{{ learninglocker_image_name }}:{{ learninglocker_image_tag }}"
        command: ["node", "cli/dist/server", "migrateMongo"]
        envFrom:
          - secretRef:
              name: "{{ learninglocker_secret_name }}"
          - configMapRef:
              name: "learninglocker-app-dotenv-{{ deployment_stamp }}"
        env:
          - name: MONGODB_PATH
            value: "{{ mongodb_uri(env_type, trashable_env_types, learninglocker_mongodb_host, deployment_stamp, learninglocker_endpoint_mongodb_ips, learninglocker_mongodb_replicaset, learninglocker_mongodb_read_preference) }}"
        volumeMounts:
          - name: learninglocker-v-storage
            mountPath: /app/storage
      restartPolicy: Never
      volumes:
        - name: learninglocker-v-storage
          persistentVolumeClaim:
            claimName: learninglocker-pvc-storage
