apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: learninglocker
    service: nginx
    version: "{{ learninglocker_nginx_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "learninglocker-nginx-{{ deployment_stamp }}"
  namespace: "{{ namespace_name }}"
spec:
  replicas: {{ learninglocker_nginx_replicas }}
  template:
    metadata:
      labels:
        app: learninglocker
        service: nginx
        version: "{{ learninglocker_nginx_image_tag }}"
        deploymentconfig: "learninglocker-nginx-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
{% set image_pull_secret_name = learninglocker_nginx_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - image: "{{ learninglocker_nginx_image_name }}:{{ learninglocker_nginx_image_tag }}"
          imagePullPolicy: Always
          name: nginx
          ports:
            - containerPort: {{ learninglocker_nginx_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "{{ learninglocker_nginx_healthcheck_endpoint }}"
              port: {{ learninglocker_nginx_healthcheck_port }}
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: "{{ learninglocker_nginx_healthcheck_endpoint }}"
              port: {{ learninglocker_nginx_healthcheck_port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          resources: {{ learninglocker_nginx_resources }}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: learninglocker-v-nginx
              readOnly: true

      volumes:
        - name: learninglocker-v-nginx
          configMap:
            name: "learninglocker-nginx-{{ deployment_stamp }}"
