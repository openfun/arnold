apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: moodlenet
    service: backend
    version: "{{ moodlenet_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "moodlenet-backend-{{ deployment_stamp }}"
  namespace: "{{ project_name }}"
spec:
  replicas: {{ moodlenet_backend_replicas }}
  template:
    metadata:
      labels:
        app: moodlenet
        service: backend
        version: "{{ moodlenet_image_tag }}"
        deploymentconfig: "moodlenet-backend-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deploymentconfig
                      operator: In
                      values:
                        - "moodlenet-backend-{{ deployment_stamp }}"
                topologyKey: kubernetes.io/hostname
{% if moodlenet_image_pull_secret_name is defined and moodlenet_image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ moodlenet_image_pull_secret_name }}"
{% endif %}
      containers:
        - name: moodlenet
          image: "{{ moodlenet_image_name }}:{{ moodlenet_image_tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /.well-known/nodeinfo
              port: {{ moodlenet_backend_port }}
              httpHeaders:
                - name: Host
                  value: "{{ moodlenet_host }}"
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /.well-known/nodeinfo
              port: {{ moodlenet_backend_port }}
              httpHeaders:
                - name: Host
                  value: "{{ moodlenet_host }}"
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: "{{ moodlenet_secret_name }}"
            - configMapRef:
                name: "moodlenet-backend-dotenv-{{ deployment_stamp }}"
          volumeMounts:
            - name: moodlenet-v-uploads
              mountPath: /var/www/uploads
      volumes:
        - name: moodlenet-v-uploads
          persistentVolumeClaim:
            claimName: moodlenet-pvc-uploads
