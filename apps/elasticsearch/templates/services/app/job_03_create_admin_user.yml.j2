{% if elasticsearch_security_enabled %}
apiVersion: batch/v1
kind: Job
metadata:
  name: "es-admin-user-{{ job_stamp }}"
  namespace: "{{ namespace_name }}"
  labels:
    app: elasticsearch
    service: app
    version: "{{ elasticsearch_image_tag }}"
    job_stamp: "{{ job_stamp }}"
    job_type: "post"
    deployment_stamp: "{{ deployment_stamp }}"
spec:
  template:
    metadata:
      name: "es-admin-user-{{ job_stamp }}"
      labels:
        app: elasticsearch
        service: app
        version: "{{ elasticsearch_image_tag }}"
        deployment_stamp: "{{ deployment_stamp }}"
        job_stamp: "{{ job_stamp }}"
    spec:
{% set image_pull_secret_name = elasticsearch_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - name: es-admin-user
          image: "{{ elasticsearch_image_name }}:{{ elasticsearch_image_tag }}"
          command:
            - bash
            - "-c"
            - curl -kfsSL
                -X PUT "https://elasticsearch:9200/_security/user/${ADMIN_USERNAME}?pretty"
                -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                -H "Content-Type:application/json"
                -d "{
                    \"password\":\"${ADMIN_PASSWORD}\",
                    \"roles\":[ \"superuser\" ]
                }"
          envFrom:
            - secretRef:
                name: "{{ elasticsearch_credentials_secret_name }}"
          resources: {{ elasticsearch_app_job_create_admin_user_resources }}
      restartPolicy: Never
      securityContext:
        runAsUser: {{ elasticsearch_container_uid }}
        runAsGroup: {{ elasticsearch_container_gid }}
        fsGroup: {{ elasticsearch_container_gid }}
        fsGroupChangePolicy: "OnRootMismatch"
{% endif %}
