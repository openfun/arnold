apiVersion: batch/v1
kind: Job
metadata:
  name: edxapp-lms-dbmigrate-{{ job_stamp }}
  namespace: "{{ project_name }}"
  labels:
    app: edxapp
    service: lms
    version: "{{ edxapp_image_tag }}"
    job_stamp: "{{ job_stamp }}"
    deployment_stamp: "{{ deployment_stamp }}"
spec:
  template:
    metadata:
      name: edxapp-lms-dbmigrate-{{ job_stamp }}
      labels:
        app: edxapp
        service: lms
        version: "{{ edxapp_image_tag }}"
        job_stamp: "{{ job_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      containers:
      - name: edxapp-lms-dbmigrate-{{ job_stamp }}
        # We point to a local registry image build for this "live" image (see
        # ImageStream and BuildConfig templates)
        image: "{{ internal_docker_registry }}/{{ project_name }}/edxapp-lms:{{ edxapp_image_tag }}-live"
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: lms.envs.fun.docker_run
        envFrom:
          - secretRef:
              name: "edxapp-{{ secret_id }}"
        command:
          - "/bin/bash"
          - "-c"
          - DJANGO_SETTINGS_MODULE=lms.envs.fun.docker_run python manage.py lms migrate
        volumeMounts:
        - mountPath: /config
          name: edxapp-config
        - mountPath: /edx/var/edxapp/media
          name: edxapp-v-media
      initContainers:
        # This initContainer has nothing mounted on its "/config" directory. We
        # copy the content of its "/config" directory (fun-platform default
        # settings) to the "/tmp/config" directory (edxapp-config volume). Then,
        # we copy service variant configMaps that may override default
        # configuration (docker_run*.py and settings.yml) in that same
        # "/tmp/config" directory. And finally, we also copy sensible
        # credentials from edxapp secret (credentials.vault.yml). When this
        # initContainer shuts down, the "edxapp-config" volume has been filled
        # with all project settings that will be used to run the service variant
        # container. Please refer to the documentation to better understand our
        # settings generation mecanism.
        - name: init-create-config
          image: "{{ edxapp_image_name }}:{{ edxapp_image_tag }}"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/bash"
            - "-c"
            - cp -r /config/* /tmp/config &&
              cp -rL /tmp/configmap-lms/* /tmp/config/lms/ &&
              cp /tmp/secret/credentials.vault.yml /tmp/config/lms/secrets.yml
          volumeMounts:
            - mountPath: /tmp/config
              name: edxapp-config
            - mountPath: /tmp/configmap-lms
              name: edxapp-configmap-lms
            - mountPath: /tmp/secret
              name: edxapp-secret
      volumes:
      - name: edxapp-configmap-lms
        configMap:
          defaultMode: 420
          name: edxapp-lms-{{ deployment_stamp }}
      - name: edxapp-config
        emptyDir: {}  # volume that lives as long as the pod lives
      - name: edxapp-secret
        secret:
          secretName: edxapp-{{ secret_id }}
      - name: edxapp-v-media
        persistentVolumeClaim:
          claimName: edxapp-pvc-media
      restartPolicy: Never
