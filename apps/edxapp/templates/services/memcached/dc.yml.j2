apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: edxapp
    service: memcached
    version: "{{ edxapp_memcached_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: edxapp-memcached-{{ deployment_stamp }}
  namespace: "{{ project_name }}"
spec:
  replicas: 1 # number of pods we want
  template:
    metadata:
      labels:
        app: edxapp
        service: memcached
        version: "{{ edxapp_memcached_image_tag }}"
        deployment_stamp: "{{ deployment_stamp }}"
        deploymentconfig: edxapp-memcached-{{ deployment_stamp }}
    spec:
      containers:
        - name: memcached
          image: "{{ edxapp_memcached_image_name }}:{{ edxapp_memcached_image_tag }}"
          ports:
            - containerPort: {{ edxapp_memcached_port }}
              protocol: TCP
          # We use a shared volume between the memcached container and its
          # sidecar container to check if memcached is responding: if the file
          # /tmp/healthcheck/ok does not exist, then it means that the sidecar
          # container probe failed and both containers should be restarted.
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "test -f /tmp/healthcheck/ok"
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "test -f /tmp/healthcheck/ok"
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /tmp/healthcheck
              name: tmp-healthcheck

        - name: memcached-sidecar
          image: "busybox:latest"
          command: ["/bin/sh", "-c"]
          # At first, consider memcached as up and running by creating the
          # /tmp/healthcheck/ok file, and, then keep the container up by running
          # an infinite loop.
          args:
            - |
              mkdir -p /tmp/healthcheck &&
              touch /tmp/healthcheck/ok &&
              while true; do echo $(date); sleep 3600; done
          livenessProbe:
            exec:
              command:
                # Set a "healtz: ok" entry, then get healtz and check it's
                # value. If it's not "ok" or none, then remove the healthcheck
                # ok file.
                - "/bin/sh"
                - "-c"
                - echo -e "set healtz 0 0 2\r\nok\r\nget healtz\r" | nc edxapp-memcached-{{ deployment_stamp }} {{ edxapp_memcached_port }} | grep ok || rm /tmp/healthcheck/ok
            initialDelaySeconds: 60
            periodSeconds: 30
          volumeMounts:
            - mountPath: /tmp/healthcheck
              name: tmp-healthcheck

      volumes:
        - name: tmp-healthcheck
          emptyDir: {}
