upstream lms-backend {
  server edxapp-lms-{{ deployment_stamp }}:{{ edxapp_django_port }} fail_timeout=0;
}

server {
  listen {{ edxapp_nginx_lms_port }};
  server_name localhost;

  {% if activate_http_basic_auth or edxapp_activate_http_basic_auth -%}
  auth_basic "{{ http_basic_auth_message }}";
  auth_basic_user_file {{ http_basic_auth_user_file }};
  {% endif %}

  # Prevent invalid display courseware in IE 10+ with high privacy settings
  add_header P3P 'CP="Open edX does not have a P3P policy."';

  client_max_body_size 4M;

  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;

  # Disables server version feedback on pages and in headers
  server_tokens off;

  location @proxy_to_lms_app {
    proxy_set_header Host $http_host;

    proxy_read_timeout {{ edxapp_routing_timeout | default("60s") }};

    proxy_redirect off;
    proxy_pass http://lms-backend;
  }

  location / {
    try_files $uri @proxy_to_lms_app;
  }

  # /login?next=<any image> can be used by 3rd party sites in <img> tags to
  # determine whether a user on their site is logged into edX.
  # The most common image to use is favicon.ico.
  location /login {
    if ( $arg_next ~* "favicon.ico" ) {
      return 403;
    }
    try_files $uri @proxy_to_lms_app;
  }

{% if edxapp_nginx_lms_admin_ip_withelist | length > 0 %}
  location /admin {
    {# 
      We want to limit access to a list of whitelisted IP addresses.

      $http_x_forwarded_for variable contains a list of IPs listed from the HTTP_X_FORWARED_FOR 
      header (e.g. w.x.y.z, 10.0.0.1). The first IP corresponds to the client's public address,
      which is of interest (other ones have been added by subsequent proxies),
      hence we restrict our comparison with the beginning of this list (this is why our regex starts with a ^).
    #}
    if ($http_x_forwarded_for !~ ^({{ edxapp_nginx_lms_admin_ip_withelist | join("|") }})) {
      return 403;
    }

    try_files $uri @proxy_to_lms_app;
  }
{% endif %}

  # Need a separate location for the image uploads endpoint to limit upload sizes
  location ~ ^/api/profile_images/[^/]*/[^/]*/upload$ {
    try_files $uri @proxy_to_lms_app;
    client_max_body_size 1049576;
  }

  location ~ ^/media/(?P<file>.*) {
    root /data/media;
    try_files /$file =404;
    expires 31536000s;
  }

  location ~ ^/static/(?P<file>.*) {
    root /data/static;
    try_files /$file =404;
  }

  location ~ ^/restricted/(?P<file>.*) {
    root /data/export;
    try_files /$file =404;
    internal;
  }

}
