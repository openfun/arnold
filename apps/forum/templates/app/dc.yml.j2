apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: forum
    service: forum
    version: "{{ forum_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "forum-app-{{ deployment_stamp }}"
  namespace: "{{ project_name }}"
spec:
  replicas: {{ forum_app_replicas }}
  template:
    metadata:
      labels:
        app: forum
        service: forum
        version: "{{ forum_image_tag }}"
        deploymentconfig: "forum-app-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: deploymentconfig
                  operator: In
                  values:
                  - "forum-app-{{ deployment_stamp }}"
              topologyKey: kubernetes.io/hostname
      containers:
        - name: forum
          # We point to a local registry image build for this "live" image (see
          # ImageStream and BuildConfig templates)
          image: "{{ internal_docker_registry }}/{{ project_name }}/forum:{{ forum_image_tag }}-live"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: {{ forum_port }}
              httpHeaders:
                - name: Host
                  value: "{{ forum_host }}"
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /heartbeat
              port: {{ forum_port }}
              httpHeaders:
                - name: Host
                  value: "{{ forum_host }}"
            initialDelaySeconds: 5
            periodSeconds: 3
          ports:
            - containerPort: "{{ forum_port }}"
              protocol: TCP
          envFrom:
            - secretRef:
                name: "{{ forum_secret_name }}"
          env:
            - name: SEARCH_SERVER
              value: "http://forum-elasticsearch-{{ deployment_stamp }}:{{ forum_elasticsearch_port }}"
          command:
            - "/bin/bash"
            - "-c"
            - MONGOHQ_URL=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD_URLENCODED}@forum-mongo-{{ deployment_stamp }}:{{ forum_mongodb_port }}/${MONGODB_DATABASE} bundle exec puma
