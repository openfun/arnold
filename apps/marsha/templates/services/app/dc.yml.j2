apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: marsha
    service: marsha
    version: "{{ marsha_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "marsha-app-{{ deployment_stamp }}"
  namespace: "{{ project_name }}"
spec:
  replicas: {{ marsha_app_replicas }}
  template:
    metadata:
      labels:
        app: marsha
        service: marsha
        version: "{{ marsha_image_tag }}"
        deploymentconfig: "marsha-app-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deploymentconfig
                      operator: In
                      values:
                        - "marsha-app-{{ deployment_stamp }}"
                topologyKey: kubernetes.io/hostname
      containers:
        - name: marsha
          image: "{{ marsha_image_name }}:{{ marsha_image_tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /__heartbeat__
              port: {{ marsha_django_port }}
              httpHeaders:
                - name: Host
                  value: "{{ marsha_host }}"
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /__lbheartbeat__
              port: {{ marsha_django_port }}
              httpHeaders:
                - name: Host
                  value: "{{ marsha_host }}"
            initialDelaySeconds: 5
            periodSeconds: 3
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: marsha.settings
            - name: DJANGO_CONFIGURATION
              value: "{{ marsha_django_configuration }}"
            - name: POSTGRES_DB
              value: "{{ marsha_postgresql_database }}"
            - name: POSTGRES_HOST
              value: "marsha-{{ marsha_postgresql_host }}-{{ deployment_stamp }}"
            - name: POSTGRES_PORT
              value: "{{ marsha_postgresql_port }}"
            - name: DJANGO_ALLOWED_HOSTS
              value: "{{ marsha_host | blue_green_hosts }}"
            - name: DJANGO_CLOUDFRONT_PRIVATE_KEY_PATH
              value: "{{ marsha_cloudfront_private_key_path }}"
          envFrom:
            - secretRef:
                name: "{{ marsha_secret_name }}"
            - configMapRef:
                name: "marsha-app-dotenv-{{ deployment_stamp }}"
          volumeMounts:
{% if env_type in trashable_env_types %}
            - name: marsha-v-media
              mountPath: /data/media
            - name: marsha-v-static
              mountPath: /data/static
{% endif %}
{% if marsha_should_sign_requests %}
            - mountPath: "{{ marsha_cloudfront_private_key_path | dirname }}"
              name: marsha-cloudfront-private-key-secret
{% endif %}
      volumes:
{% if env_type in trashable_env_types %}
        - name: marsha-v-media
          persistentVolumeClaim:
            claimName: marsha-pvc-media
        - name: marsha-v-static
          persistentVolumeClaim:
            claimName: marsha-pvc-static
{% endif %}
{% if marsha_should_sign_requests %}
        - name: marsha-cloudfront-private-key-secret
          secret:
            secretName: "{{ marsha_cloudfront_private_key_secret_name }}"
{% endif %}
