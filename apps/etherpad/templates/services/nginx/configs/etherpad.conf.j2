{% set http_basic_auth_enabled = activate_http_basic_auth or etherpad_activate_http_basic_auth %}
{% set bypass_htaccess = etherpad_nginx_bypass_htaccess_ip_whitelist | length > 0 %}
upstream etherpad-backend {
  server etherpad-app-{{ deployment_stamp }}:{{ etherpad_application_port }} fail_timeout=0;
}

server {
  listen {{ etherpad_nginx_port }};
  server_name localhost;

  client_max_body_size 100M;

  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;

  # Disables server version feedback on pages and in headers
  server_tokens off;

{% if http_basic_auth_enabled %}
{% if bypass_htaccess %}
  location @basicauth {
    auth_basic "{{ http_basic_auth_message }}";
    auth_basic_user_file {{ http_basic_auth_user_file }};

    try_files $uri @proxy_to_etherpad_app;
  }
{% else %}
  auth_basic "{{ http_basic_auth_message }}";
  auth_basic_user_file {{ http_basic_auth_user_file }};
{% endif %}
{% endif %}

  location @proxy_to_etherpad_app {
    proxy_set_header Host $http_host;
    proxy_pass_header Server;
    # be careful, this line doesn't override any proxy_buffering on set in a conf.d/file.conf
    proxy_buffering off;
    # http://wiki.nginx.org/HttpProxyModule
    proxy_set_header X-Real-IP $remote_addr;
    # EP logs to show the actual remote IP
    proxy_set_header X-Forwarded-For $remote_addr;
    # for EP to set secure cookie flag when https is used
    proxy_set_header X-Forwarded-Proto $scheme;
    # pass the host header
    proxy_set_header Host $host;
    # recommended with keepalive connections
    proxy_http_version 1.1;
    # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_redirect off;
    proxy_pass http://etherpad-backend;
  }

  location / {
{% if http_basic_auth_enabled and bypass_htaccess %}
    if ($http_x_forwarded_for !~ ^({{ etherpad_nginx_bypass_htaccess_ip_whitelist | join("|") }})) {
      error_page 401 = @basicauth;
      return 401;
    }
{% endif %}
    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml image/svg+xml;
    expires {{ etherpad_nginx_static_cache_expires }};
    add_header Cache-Control public;

    try_files $uri @proxy_to_etherpad_app;
  }
}

# we're in the http context here
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
