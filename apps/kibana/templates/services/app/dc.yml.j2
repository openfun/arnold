apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: kibana
    service: app
    version: "{{ kibana_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "kibana-app-{{ deployment_stamp }}"
  namespace: "{{ project_name }}"
spec:
  replicas: {{ kibana_app_replicas }}
  template:
    metadata:
      labels:
        app: kibana
        service: app
        version: "{{ kibana_image_tag }}"
        deploymentconfig: "kibana-app-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deploymentconfig
                      operator: In
                      values:
                        - "kibana-app-{{ deployment_stamp }}"
                topologyKey: kubernetes.io/hostname
      containers:
        - name: kibana
          image: "{{ kibana_image_name }}:{{ kibana_image_tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /api/status
              port: {{ kibana_app_port }}
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/status
              port: {{ kibana_app_port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: "{{ kibana_secret_name }}"
          volumeMounts:
            - name: kibana-configmap
              mountPath: "{{ kibana_config_path }}"
      volumes:
        - name: kibana-configmap
          configMap:
            defaultMode: 420
            name: kibana-app-{{ deployment_stamp }}
