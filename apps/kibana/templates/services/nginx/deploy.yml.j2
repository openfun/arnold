apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: kibana
    service: nginx
    version: "{{ kibana_nginx_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "kibana-nginx-{{ deployment_stamp }}"
  namespace: "{{ namespace_name }}"
spec:
  replicas: {{ kibana_nginx_replicas }}
  selector:
    matchLabels:
      app: kibana
      service: nginx
      version: "{{ kibana_nginx_image_tag }}"
      deployment: "kibana-nginx-{{ deployment_stamp }}"
      deployment_stamp: "{{ deployment_stamp }}"
  template:
    metadata:
      labels:
        app: kibana
        service: nginx
        version: "{{ kibana_nginx_image_tag }}"
        deployment: "kibana-nginx-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: deployment
                  operator: In
                  values:
                  - "kibana-nginx-{{ deployment_stamp }}"
              topologyKey: kubernetes.io/hostname
{% set image_pull_secret_name = kibana_nginx_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - image: "{{ kibana_nginx_image_name }}:{{ kibana_nginx_image_tag }}"
          name: nginx
          ports:
            - containerPort: {{ kibana_nginx_port }}
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: kibana-v-nginx
              readOnly: true
{% if activate_http_basic_auth or kibana_activate_http_basic_auth %}
            - mountPath: "{{ http_basic_auth_user_file | dirname }}"
              name: kibana-htpasswd
{% endif %}

          livenessProbe:
            httpGet:
              path: "{{ kibana_nginx_healthcheck_endpoint }}"
              port: {{ kibana_nginx_healthcheck_port }}
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: "{{ kibana_nginx_healthcheck_endpoint }}"
              port: {{ kibana_nginx_healthcheck_port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          resources: {{ kibana_nginx_resources }}
      securityContext:
        runAsUser: {{ container_uid }}
        runAsGroup: {{ container_gid }}
      volumes:
        - name: kibana-v-nginx
          configMap:
            name: kibana-nginx-{{ deployment_stamp }}
{% if activate_http_basic_auth or kibana_activate_http_basic_auth %}
        - name: kibana-htpasswd
          secret:
            secretName: "{{ kibana_nginx_htpasswd_secret_name }}"
{% endif %}
