{% set http_basic_auth_enabled = activate_http_basic_auth or kibana_activate_http_basic_auth %}
{% set bypass_htaccess = kibana_nginx_bypass_htaccess_ip_whitelist | length > 0 %}
upstream kibana-backend {
  server kibana-app-{{ deployment_stamp }}:{{ kibana_app_port }} fail_timeout=0;
}

server {
  listen {{ kibana_nginx_port }};
  server_name localhost;

  # Disables server version feedback on pages and in headers
  server_tokens off;
  {% block server_extra %}{% endblock %}

{% if http_basic_auth_enabled %}
{% if bypass_htaccess %}
  location @basicauth {
    auth_basic "{{ http_basic_auth_message }}";
    auth_basic_user_file {{ http_basic_auth_user_file }};

    try_files $uri @proxy_to_kibana_app;
  }
{% else %}
  auth_basic "{{ http_basic_auth_message }}";
  auth_basic_user_file {{ http_basic_auth_user_file }};
{% endif %}
{% endif %}

  location @proxy_to_kibana_app {
    proxy_set_header Host $http_host;

    proxy_redirect off;
    proxy_pass http://kibana-backend;
  }

  location / {
{% if http_basic_auth_enabled and bypass_htaccess %}
    if ($http_x_forwarded_for !~ ^({{ kibana_nginx_bypass_htaccess_ip_whitelist | join("|") }})) {
      error_page 401 = @basicauth;
      return 401;
    }
{% endif %}

    try_files $uri @proxy_to_kibana_app;
  }
}
