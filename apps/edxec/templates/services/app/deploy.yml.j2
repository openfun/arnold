apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: edxec
    service: edxec
    version: "{{ edxec_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "edxec-app-{{ deployment_stamp }}"
  namespace: "{{ namespace_name }}"
spec:
  replicas: {{ edxec_app_replicas }}
  selector:
    matchLabels:
      app: edxec
      service: edxec
      version: "{{ edxec_image_tag }}"
      deployment: "edxec-app-{{ deployment_stamp }}"
      deployment_stamp: "{{ deployment_stamp }}"
  template:
    metadata:
      labels:
        app: edxec
        service: edxec
        version: "{{ edxec_image_tag }}"
        deployment: "edxec-app-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deployment
                      operator: In
                      values:
                        - "edxec-app-{{ deployment_stamp }}"
                topologyKey: kubernetes.io/hostname
{% set image_pull_secret_name = edxec_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - name: edxec
          image: "{{ edxec_image_name }}:{{ edxec_image_tag }}"
          imagePullPolicy: Always
          # Describe environment explicitly
          env:
            - name: ECOMMERCE_CFG
              value: /usr/local/etc/ecommerce/local.yml
            - name: DJANGO_SETTINGS_MODULE
              value: ecommerce.settings.production
          volumeMounts:
            - name: edxec-local
              mountPath: /usr/local/etc/ecommerce
            - name: edxec-v-media
              mountPath: /app/media
            - name: edxec-v-static
              mountPath: /app/assets
      initContainers:
        # As we separate configuration from secrets, we need an initcontainer
        # to merge settings into a single local.yml file.
        - name: init-create-local
          image: "{{ edxec_yq_image_name }}:{{ edxec_yq_image_tag }}"
          imagePullPolicy: Always
          command:
            - "/bin/sh"
            - "-c"
            - "yq m /tmp/config/local.yml /tmp/secret/local.yml > /usr/local/etc/ecommerce/local.yml"
          volumeMounts:
            - name: edxec-local
              mountPath: /usr/local/etc/ecommerce
            - name: edxec-configmap
              mountPath: /tmp/config
            - name: edxec-secret
              mountPath: /tmp/secret
      securityContext:
        runAsUser: {{ container_uid }}
        runAsGroup: {{ container_gid }}
      volumes:
        - name: edxec-local
          emptyDir: {}  # volume that lives as long as the pod lives
        - name: edxec-configmap
          configMap:
            defaultMode: 420
            name: edxec-app-{{ deployment_stamp }}
        - name: edxec-secret
          secret:
            secretName: "{{ edxec_secret_name }}"
        - name: edxec-v-media
          persistentVolumeClaim:
            claimName: edxec-pvc-media
        - name: edxec-v-static
          persistentVolumeClaim:
            claimName: edxec-pvc-static
