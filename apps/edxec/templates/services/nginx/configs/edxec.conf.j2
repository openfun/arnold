{% set http_basic_auth_enabled = activate_http_basic_auth or edxec_activate_http_basic_auth %}
{% set bypass_htaccess = edxec_nginx_bypass_htaccess_ip_whitelist | length > 0 %}
upstream edxec-backend {
  server edxec-app-{{ deployment_stamp }}:{{ edxec_django_port }} fail_timeout=0;
}

server {
  listen {{ edxec_nginx_port }};
  server_name localhost;

{% if http_basic_auth_enabled %}
{% if bypass_htaccess %}
  location @basicauth {
    auth_basic "{{ http_basic_auth_message }}";
    auth_basic_user_file {{ http_basic_auth_user_file }};

    try_files $uri @proxy_to_edxec_app;
  }
{% else %}
  auth_basic "{{ http_basic_auth_message }}";
  auth_basic_user_file {{ http_basic_auth_user_file }};
{% endif %}
{% endif %}

  client_max_body_size 100M;

  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;

  # Disables server version feedback on pages and in headers
  server_tokens off;
  {% block server_extra %}{% endblock %}

  location @proxy_to_edxec_app {
    proxy_set_header Host $http_host;

    proxy_redirect off;
    proxy_pass http://edxec-backend;
  }

  location / {
{% if http_basic_auth_enabled and bypass_htaccess %}
    if ($http_x_forwarded_for !~ ^({{ edxec_nginx_bypass_htaccess_ip_whitelist | join("|") }})) {
      error_page 401 = @basicauth;
      return 401;
    }
{% endif %} 

    try_files $uri @proxy_to_edxec_app;
  }

{% if edxec_nginx_admin_ip_whitelist | length > 0 %}
  location /admin {
    {#
      We want to limit access to a list of whitelisted IP addresses.

      $http_x_forwarded_for variable contains a list of IPs listed from the HTTP_X_FORWARED_FOR
      header (e.g. w.x.y.z, 10.0.0.1). The first IP corresponds to the client's public address,
      which is of interest (other ones have been added by subsequent proxies),
      hence we restrict our comparison with the beginning of this list (this is why our regex starts with a ^).
    #}
    if ($http_x_forwarded_for !~ ^({{ edxec_nginx_admin_ip_whitelist | join("|") }})) {
      return 403;
    }

    try_files $uri @proxy_to_edxec_app;
  }
{% endif %}

  location ~ ^/static/(?P<file>.*) {
    access_log off;
    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml image/svg+xml;
    expires {{ edxec_nginx_static_cache_expires }};
    add_header Cache-Control public;
    root /data/static/;
    try_files /$file =404;
  }

  location ~ ^/media/(?P<file>.*) {
    access_log off;
    expires {{ edxec_nginx_media_cache_expires }};
    add_header Cache-Control public;
    root /data/media/;
    try_files /$file =404;
  }
}
