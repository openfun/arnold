apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: redis
    service: app
    version: "{{ redis_app_image_tag }}"
  name: redis-app
  namespace: "{{ namespace_name }}"
spec:
  replicas: 1  # number of pods we want
  # When upgrading, we don't want OpenShift to run several pods mounted on the same volume
  # because Redis does not support that. Instead we need to make sure that the existing pod
  # is switched off before the new one starts.
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
      service: app
      version: "{{ redis_app_image_tag }}"
      deployment: redis-app
  template:
    metadata:
      labels:
        app: redis
        service: app
        version: "{{ redis_app_image_tag }}"
        deployment: redis-app
    spec:
{% set image_pull_secret_name = redis_app_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - name: redis
          image: "{{ redis_app_image_name }}:{{ redis_app_image_tag }}"
          command:
            - "redis-server"
            - "/config/redis/app.conf"
          ports:
            - containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "redis-cli ping && touch /data/healthcheck"
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - "redis-cli ping && touch /data/healthcheck"
            periodSeconds: 10
          volumeMounts:
            - mountPath: /data
              name: redis-v-data
            - mountPath: /config/redis
              name: redis-v-config
      securityContext:
        runAsUser: {{ container_uid }}
        runAsGroup: {{ container_gid }}
      volumes:
        - name: redis-v-data
          persistentVolumeClaim:
            claimName: redis-pvc-data
        - name: redis-v-config
          configMap:
            name: "redis-app-{{ deployment_stamp }}"
