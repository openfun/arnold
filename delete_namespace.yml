---
# This playbook deletes a K8S namespace for a particular
# customer/environment

- name: Delete namespace
  hosts: local
  gather_facts: false

  pre_tasks:
    - name: Check configuration
      ansible.builtin.import_tasks: tasks/check_configuration.yml

  tasks:
    - name: Display playbook name
      ansible.builtin.debug: msg="==== Starting delete_namespace playbook ===="
      tags: deploy

    - name: Set vars
      ansible.builtin.import_tasks: tasks/set_vars.yml

    # We must check if the namespace exists first. Without this condition, k8s
    # will try to delete a missing namespace and returns a 403 ¯\_(ツ)_/¯
    - name: Check if namespace exists
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Namespace
        field_selectors:
          - metadata.name={{ namespace_name }}
      register: namespace

    - name: Delete the namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ namespace_name }}"
        state: absent
      when: namespace.resources | length > 0

    - name: Wait for namespace to be terminated
      kubernetes.core.k8s_info:
        api_version: "v1"
        kind: Namespace
        field_selectors:
          - metadata.name={{ namespace_name }}
      register: terminating_namespaces
      until: terminating_namespaces.resources is defined and (terminating_namespaces.resources | length) == 0
      retries: 120
      delay: 5
      when: namespace.resources | length > 0
