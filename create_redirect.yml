---
# This playbook creates the redirection core app objects.

- hosts: local
  gather_facts: False

  pre_tasks:
    - import_tasks: tasks/validate_configuration.yml

  tasks:
    - name: Display playbook name
      debug: msg="==== Starting create_redirect playbook ===="
      tags: deploy

    - import_tasks: tasks/set_vars.yml

    - name: Lookup available core applications
      set_fact: core_apps="{{ [ lookup('apps', 'core_apps/') ] | flatten }}"

    - name: Set app to point to the redirect app
      set_fact:
        app: '{{ core_apps | json_query("[?name==''redirect''] | [0]") }}'

    - name: Include "all" type vars for redirect app
      include_tasks: tasks/load_app_defaults.yml
      vars:
        file: "{{ item.path }}"
      with_items: '{{ app | json_query("vars[?type==''all'']") }}'

    - import_tasks: tasks/get_objects_for_app.yml

    # Set the deployment stamp value that will be used to make created objects
    # unique.
    - name: Set deployment stamp
      set_fact: deployment_stamp="d-{{ lookup('pipe', 'date +%y%m%d-%Hh%Mm%Ss') }}"

    - import_tasks: tasks/create_app_config.yml

    - name: Create redirect deployments
      openshift_raw:
        force: true
        namespace: "{{ project_name }}"
        definition: "{{ lookup('template', deployment) | from_yaml }}"
        state: present
      loop: "{{ deployments }}"
      loop_control:
        loop_var: deployment

    # Check if the nginx service already exists and recreate it only if not
    # (parts of an OpenShift Service definition are immutable).
    - name: Check if the redirect nginx service already exists
      set_fact:
        redirect_nginx_service: |
          {{
            [
              lookup(
                'openshift',
                api_version='v1',
                namespace=project_name,
                kind='Service',
                resource_name='redirect-nginx'
              )
            ] | flatten
          }}

    - name: Create redirect services
      openshift_raw:
        namespace: "{{ project_name }}"
        definition: "{{ lookup('template', service) | from_yaml }}"
        state: present
      loop: "{{ services }}"
      loop_control:
        loop_var: service
      when: redirect_nginx_service | length == 0

    - import_tasks: tasks/create_redirection_routes.yml
